[homing_override]
axes: xyz
set_position_z: 0
gcode:
  #M400         # Wait for moves to finish
   # Reduce motor current  
  
  #SET_TMC_CURRENT STEPPER=stepper_x CURRENT=0.5 HOLDCURRENT=0.7
  #SET_TMC_CURRENT STEPPER=stepper_y CURRENT=0.5 HOLDCURRENT=0.7
   G90
   G0 Z5 F600
   G28 X Y
  G0 X155 Y133 F4000 
   
   G28 Z
   G0 Z10 F1800
   G0 X75 Y75 Z20 F4000

    # Restore motor current
  
  #SET_TMC_CURRENT STEPPER=stepper_x CURRENT=1.0 HOLDCURRENT=0.5
  #SET_TMC_CURRENT STEPPER=stepper_y CURRENT=1.0 HOLDCURRENT=0.5

[gcode_macro M900]
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  # command params
  # variables 
  {% set boarder_delta = printer['gcode_macro _USER_VARIABLE'].boarder_delta|int %}
  {% set retract_pause = printer['gcode_macro _USER_VARIABLE'].retract_pause|int %}
  {% set x_park = printer.toolhead.axis_minimum.x|float + boarder_delta %}
  {% set y_park = printer.toolhead.axis_minimum.y|float + boarder_delta %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  # features
  {% set ena_debug = printer.save_variables.variables.debug|lower %}
  
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}

  {% if ena_debug == "true" %}
    {action_respond_info('==== PAUSE ====')}
    {action_respond_info("retract_pause: %s" % (retract_pause))}
    {action_respond_info("x_park: %s" % (x_park))}
    {action_respond_info("y_park: %s" % (y_park))}
    {action_respond_info("max_z: %s" % (max_z))}
    {action_respond_info("act_z: %s" % (act_z))}
    {action_respond_info("z_safe: %s" % (z_safe))}
    {action_respond_info('===============')}
  {% endif %}

  ##### end of definitions #####
  PAUSE_BASE
  G91
  G92 E0
  G1 E-{retract_pause} F1800
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  # command params
  # variables
  {% set retract_pause = printer['gcode_macro _USER_VARIABLE'].retract_pause|int %}
  # features
  {% set ena_debug = printer.save_variables.variables.debug|lower %}

  {% if ena_debug == "true" %}
    {action_respond_info('==== RESUME ====')}
    {action_respond_info("retract_pause: %s" % (retract_pause))}
    {action_respond_info('===============')}
  {% endif %}

  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  G91
  G92 E0
  G1 E{retract_pause} F1400
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set ENDY = printer.toolhead.axis_maximum.y|float - 10 %}
    G91                           # Posición relativa
    G1    E-1 F300                # Retraccion filamento quita presión
    G1 Z1 E-1 F4000               # Levantamos y desplazamos
    G90                           # Posición abosoluta
    G1 X0 Y{ENDY}                 # Sacamos la bandeja
    M84                           # Apagamos motores
    M106 S0                       # Apaga ventilador capa
    TURN_OFF_HEATERS              # Apaga hotend
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    

[gcode_macro G29]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28                                                                     # home if not homed
    {% endif %}
    SAVE_GCODE_STATE NAME=G29_STATE
    {% if T|int > 30 %}
        M140 S{T}                                                               # set bed temperature
        M190 S{T}                                                               # wait for bed temperature
    {% endif %}
    BED_MESH_CALIBRATE
    G0 X10 Y10 F6000


[gcode_macro PRIME_LINE]
gcode:
    {% set feedrate = params.F|default(20)|float * 60 %}
    {% set length = params.L|default(120)|float %}
    {% if 'Y' in params %}
        {% set length_max = ( printer.toolhead.axis_maximum.y|float - 10.0 ) %}
    {% else %}
        {% set length_max = ( printer.toolhead.axis_maximum.x|float - 10.0 ) %}
    {% endif %}
    {% if length > length_max %}
        {% set length = length_max %}
    {% endif %}
    {% set width = printer.configfile.settings.extruder.nozzle_diameter|float %}
   {% set height = ( (width / 0.04)|int - (width / 0.04 / 4)|int )|float * 0.04 %}
    {% set extrude = 1.5 * length * width * height / 2.4 %}
    SAVE_GCODE_STATE NAME=PRIME_LINE_STATE
    SET_IDLE_TIMEOUT TIMEOUT=7200
    {% if 'Y' in params %}
        {% set x_start = 5.0 %}
        {% set y_start = (printer.toolhead.axis_maximum.y|float - length) / 2 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 Y{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 X{width} F5000                                                       # move to the next line
        G1 Y-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% else %}
        {% set x_start = (printer.toolhead.axis_maximum.x|float - length) / 2 %}
        {% set y_start = 5.0 %}
        G0 X{x_start} Y{y_start} Z{height} F5000                                # move to start position
        G91                                                                     # relative positioning
        G1 X{length} E{extrude} F{feedrate}                                     # draw the 1st line
        G1 Y{width} F5000                                                       # move to the next line
        G1 X-{length} E{extrude} F{feedrate}                                    # draw the 2nd line
    {% endif %}
    RESTORE_GCODE_STATE NAME=PRIME_LINE_STATE